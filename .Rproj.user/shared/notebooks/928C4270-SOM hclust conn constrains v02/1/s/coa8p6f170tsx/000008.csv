"0","# NbClust"
"0","# not all of the indexes always work with all distance matrices, especially ours which has been manipulated and represents a mix of numerical and cetegorical data we therefore will loop through all available indeces and catch all errors."
"0","#hubert and dindex have been removed from list, becuase those are graphical methods"
"0","#gap and silhoutte have been removed as well since they are being plotted anyways"
"0","indexes = c( ""kl"", ""ch"", ""hartigan"", ""ccc"", ""scott"", ""marriot"", ""trcovw"", ""tracew"", ""friedman"", ""rubin"", ""cindex"", ""db"", ""duda"", ""pseudot2"", ""beale"", ""ratkowsky"", ""ball"", ""ptbiserial"", ""frey"", ""mcclain"", ""gamma"", ""gplus"", ""tau"", ""dunn"", ""sdindex"",  ""sdbw"")"
"0","if(recalculate_no_clusters == F & file.exists('nbclust.Rdata') == T ){"
"0","  "
"0","  load('nbclust.Rdata')"
"0","  "
"0","}else{"
"0","  results_nb = list()"
"0","  "
"0","  safe_nb = purrr::safely(NbClust::NbClust)"
"0","  "
"0","  # we will time the execution time of each step"
"0","  times = list()"
"0","  "
"0","  for(i in 1:length(indexes) ){"
"0","  "
"0","  t = lubridate::now()"
"0","    "
"0","  nb = safe_nb(as.dist(dist_adj)"
"0","                        , distance = ""euclidean"""
"0","                        , min.nc = 2              "
"0","                        , max.nc = 15             "
"0","                        , method = ""ward.D2"""
"0","                        , index = indexes[i]"
"0","                        )"
"0","  "
"0","  results_nb[[i]] = nb"
"0","  "
"0","  times[[i]]      = lubridate::now()-t"
"0","  "
"0","  #print(indexes[i]) "
"0","  #print(nb$result$Best.nc)"
"0","  "
"0","  }"
"0","  "
"0","  df_clust = tibble( indexes = indexes"
"0","                     , times = times"
"0","                     , nb = results_nb) %>%"
"0","    mutate( results = purrr::map(nb,'result') "
"0","            , error = purrr::map(nb, 'error')"
"0","            , is_ok = purrr::map_lgl(error, is_null))"
"0","  "
"0","  df_clust_success = df_clust %>%"
"0","    filter( is_ok ) %>%"
"0","    mutate( names      = purrr::map(results, names)"
"0","            ,all_index = purrr::map(results, 'All.index')"
"0","            ,best_nc   = purrr::map(results, 'Best.nc')"
"0","            ,best_nc   = purrr::map(best_nc, function(x) x[[1]])"
"0","            ,is_ok     = !purrr::map_lgl(best_nc, is_null)"
"0","            ) %>%"
"0","    filter(is_ok) %>%"
"0","    mutate( best_nc    = purrr::flatten_dbl(best_nc))"
"0","  save(df_clust_success, file = 'nbclust.Rdata')"
"0","}"
"0","df_clust_success %>%"
"0","  filter(!is_null(best_nc) )%>%"
"0","ggplot( aes(x = as.factor(best_nc))) +"
"0","  geom_bar()+"
"0","  labs(title = 'Votes on optimal number of clusters\nVotes from Gap and Silhouete\nnotconsidered'"
"0","       ,x     = 'Best No of Clusters')"
